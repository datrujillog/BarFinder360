apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  labels:
    micro: users
spec:
  selector:
    matchLabels:
      micro: users
  replicas: 3
  template:
    # Definicion del PD
    metadata:
      name: users
      labels:
        micro: users
    spec:
      containers:
        - name: postgres
          image: postgres
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_PASSWORD
              value: "12345"
            - name: POSTGRES_DB
              value: "barfinder360_Users"
          resources:
            # requests:
            #   cpu: "250m"
            #   memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "1024Mi"
          ports:
            - containerPort: 5432
              # name: postgres
              protocol: TCP
          # volumeMounts:
          #   - mountPath: "/data"
          #     name: "db-data"
        - name: users
          image: users-micro/v1.0
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "500m"
              memory: "128Mi"
            limits:
              cpu: "1000m"
              memory: "1024Mi"
          ports:
            - containerPort: 5001
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 25
            timeoutSeconds: 1
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:    # ES PARA SABER SI EL CONTENEDOR ESTA LISTO PARA RECIBIR TRAFICO
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 2
            failureThreshold: 3

      # volumenes:
      #   - name: users
      #     hostPath:
      #       path: /data/microservisios/users
      #       # type: DirectoryOrCreate
      #   db-data:
      #     emptyDir: {}
